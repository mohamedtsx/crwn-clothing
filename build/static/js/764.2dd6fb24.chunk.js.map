{"version":3,"file":"static/js/764.2dd6fb24.chunk.js","mappings":"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","sources":["components/button/button.style.tsx","components/button/button.component.tsx","components/form-input/form-input.style.tsx","components/form-input/form-input.component.tsx","components/sign-in-form/sign-in-form.component.tsx","components/sign-up-form/sign-up-form.component.tsx","routes/authentication/authentication.component.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BaseBtn = styled.button`\n  min-width: 16.5rem;\n  width: auto;\n  height: 5rem;\n  line-height: 5rem;\n  padding: 0 3.5rem 0 3.5rem;\n  font-size: 1.5rem;\n  overflow: hidden;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: 'Open Sans Condensed';\n  font-weight: bolder;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n \n  &:hover {\n    background-color: #fff;\n    color: black;\n    border: 1px solid black;\n  }\n\n  &:active {\n    box-shadow: 0 0 4px rgba(255, 255, 255, 0.5);\n  }\n`\n\nexport const GoogleSignInBtn = styled(BaseBtn)`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    color: #fff;\n    border: none;\n  }\n`\n\nexport const InvertedBtn = styled(BaseBtn)`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`","import {  FC, ButtonHTMLAttributes} from 'react';\nimport { BaseBtn, GoogleSignInBtn, InvertedBtn } from './button.style';\n\n\nexport enum BUTTON_TYPE_CLASSES {\n    google = 'google-sign-in',\n    inverted = 'inverted',\n    base = 'base'\n}\n\nexport type ButtonProps = {\n    buttonType?: BUTTON_TYPE_CLASSES;\n    isLoading?: boolean;\n} & ButtonHTMLAttributes<HTMLButtonElement>;\n\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseBtn => \n    ({\n        [BUTTON_TYPE_CLASSES.base]: BaseBtn,\n        [BUTTON_TYPE_CLASSES.google]: GoogleSignInBtn,\n        [BUTTON_TYPE_CLASSES.inverted]: InvertedBtn,\n    }[buttonType]);\n\n\n\nconst Button: FC<ButtonProps> = ({\n    buttonType, \n    children, \n    isLoading, \n    ...otherProps\n}) => {\n    const CustomButton = getButton(buttonType);\n    return (\n        <CustomButton {...otherProps}>\n            {isLoading ? '...' : children}\n        </CustomButton>\n    )\n}\n\nexport default Button;","import styled, { css } from 'styled-components';\n\n\nconst shrinkLabelStyle = css`\n    top: -1.4rem;\n    font-size: var(--fz-xxs);\n    color: var(--black);\n`\n\nexport const Group = styled.div`\n    position: relative;\n    margin: 4.5rem 0;\n\n    input[type='password'] {\n        letter-spacing: 0.3rem;\n    }\n`\ntype FormInputLabelProps = {\n    shrink?: boolean\n}\n\nexport const FormInputLabel = styled.label`\n    color: var(--input-sub);\n    font-size: 1.6rem;\n    font-weight: normal;\n    position: absolute;\n    pointer-events: none;\n    left: 0.5rem;\n    top: 1rem;\n    transition: 300ms ease all;\n\n    ${({shrink}: FormInputLabelProps) => shrink && shrinkLabelStyle};\n`\n\n\nexport const FormIn = styled.input`\n    background: none;\n    background-color: white;\n    color: var(--input-sub);\n    font-size: 1.8rem;\n    padding: 1rem 1rem 1rem 0.5rem;\n    display: block;\n    width: 100%;\n    border: none;\n    border-radius: 0;\n    border-bottom: 1px solid var(--input-sub);\n    margin: 2.5rem 0;\n\n    &:focus {\n        outline: none;\n    }\n\n    &:focus ~ ${FormInputLabel} {\n        ${shrinkLabelStyle}\n    }\n`\n","import { InputHTMLAttributes, FC } from 'react';\n\nimport { Group, FormIn, FormInputLabel } from './form-input.style';\n\n\ntype FormInputProps = {\n    labelText: string\n} & InputHTMLAttributes<HTMLInputElement>\n\nconst FormInput: FC<FormInputProps> = ({labelText, ...otherProps}) => {\n    // for check if there are no value prop or there are but empty string\n\n    const labelValue = Boolean(\n        otherProps.value && \n        typeof otherProps.value==='string' &&\n        otherProps.value.length\n    );\n\n    return(\n        <Group>\n            <FormIn {...otherProps}/>\n            <FormInputLabel shrink={labelValue}>{labelText}</FormInputLabel>\n        </Group>\n    )\n}\n\nexport default FormInput;","import { useState, FormEvent, ChangeEvent } from 'react';\n\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/button.component';\nimport FormInput from '../form-input/form-input.component';\n\nimport { emailSignInStart, googleSignInStart } from '../../store/user/user.actions';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\n\nexport const StyledSignUp = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 38rem;\n\n    h2 {\n        margin: 1rem 0;\n        color: var(--title)\n    }\n\n    span { \n        color: var(--text);\n    }\n`\nconst StyledButtons = styled.div`\n    ${({theme}) => theme.mixes.flexBetween};\n    gap: 15px;\n`\n\n\nconst defaultFormFields = {\n    email: '',\n    password: ''\n}\n\nconst SignIn = () => {\n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const {email, password} = formFields;\n    const dispatch = useDispatch()\n\n    const handelChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const {name, value} = e.target;\n        setFormFields({...formFields, [name]: value})\n    }\n\n    const handelSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        \n        try {\n            dispatch(emailSignInStart(email,password));\n            resetFormFields();\n        } catch(error) {\n            console.log('user sign in failed', error);\n        }\n    }\n\n    const resetFormFields = () => {\n        setFormFields(defaultFormFields);\n    }\n\n    const googleSignIn = () => {\n        dispatch(googleSignInStart());\n    }\n\n\n    return(\n        <StyledSignUp>\n            <h2>Already have an account ?</h2>\n            <span>Sign in with your email and password</span>\n            <form onSubmit={handelSubmit}>\n                <FormInput \n                    labelText='email' \n                    type='email' \n                    name='email' \n                    value={email} \n                    onChange={handelChange} \n                    required\n                />\n                <FormInput \n                    labelText='password' \n                    type='password' \n                    name='password' \n                    value={password} \n                    onChange={handelChange} \n                    required\n                />\n                <StyledButtons>\n                    <Button type='submit'>Sign in</Button>\n                    <Button \n                        buttonType={BUTTON_TYPE_CLASSES.google} \n                        type='button' \n                        onClick={googleSignIn}\n                    >Google sign in</Button>\n                </StyledButtons>\n            </form>\n        </StyledSignUp>\n    )\n}\n\nexport default SignIn;","import { useState, FormEvent, ChangeEvent } from 'react';\nimport { AuthError, AuthErrorCodes } from 'firebase/auth';\n\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\nimport { signUpStart } from '../../store/user/user.actions';\nimport { useDispatch } from 'react-redux';\n\nimport { StyledSignUp } from '../sign-in-form/sign-in-form.component';\n\n\nconst defaultFormFields = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n}\n\nconst SignUp = () => {\n    \n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const {name, email, password, confirmPassword} = formFields;\n    const dispatch = useDispatch();\n\n    const resetFormFields = () => {\n        setFormFields(defaultFormFields);\n    }\n\n\n    const handelSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n            alert('both password not the same');\n            return;\n        };\n\n        try {\n            dispatch(signUpStart(email,password,name));\n            resetFormFields();\n        } catch(error) {\n            if((error as AuthError).code === AuthErrorCodes.EMAIL_EXISTS) {\n                alert('Cannot create user, email already in use');\n            } else {\n                console.log('Sign Up Failed', error);\n            }\n        }\n    }\n\n    const handelChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const {name, value} = e.target;\n        setFormFields({...formFields, [name]: value});\n    }\n\n    \n    return(\n        <StyledSignUp>\n            <h2>Don't have an account ?</h2>\n            <span>Sign up with your email and password</span>\n            <form onSubmit={handelSubmit}>\n                <FormInput \n                    labelText='name' \n                    type='text' \n                    name='name' \n                    value={name} \n                    onChange={handelChange} \n                    required\n                />\n                <FormInput \n                    labelText='email' \n                    type='email' \n                    name='email' \n                    value={email} \n                    onChange={handelChange} \n                    required\n                />\n                <FormInput \n                    labelText='password' \n                    type='password' \n                    name='password' \n                    value={password} \n                    onChange={handelChange} \n                    required\n                />\n                <FormInput \n                    labelText='confirm password' \n                    type='password' \n                    name='confirmPassword' \n                    value={confirmPassword} \n                    onChange={handelChange} \n                    required\n                />\n                <Button type='submit'>Sign up</Button>\n            </form>\n        </StyledSignUp>\n    )\n}\n\nexport default SignUp;","import SignIn from '../../components/sign-in-form/sign-in-form.component';\nimport SignUp from '../../components/sign-up-form/sign-up-form.component';\nimport styled from 'styled-components';\n\n\nconst StyledAuthentication = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    gap: 3rem;\n    max-width: 90rem;\n    margin: 3rem auto;\n`;\n\nconst Authentication = () => {\n\n    return(\n        <StyledAuthentication>\n            <SignIn/>\n            <SignUp/>\n        </StyledAuthentication>\n    )\n}\n\nexport default Authentication;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["BaseBtn","styled","_templateObject","_taggedTemplateLiteral","GoogleSignInBtn","_templateObject2","InvertedBtn","_templateObject3","BUTTON_TYPE_CLASSES","_ref","buttonType","children","isLoading","otherProps","_objectWithoutProperties","_excluded","CustomButton","_BUTTON_TYPE_CLASSES$","arguments","length","undefined","base","_defineProperty","google","inverted","getButton","_jsx","_objectSpread","shrinkLabelStyle","css","Group","FormInputLabel","shrink","FormIn","_templateObject4","labelText","labelValue","Boolean","value","_jsxs","StyledSignUp","StyledButtons","theme","mixes","flexBetween","defaultFormFields","email","password","_useState","useState","_useState2","_slicedToArray","formFields","setFormFields","dispatch","useDispatch","handelChange","e","_e$target","target","name","resetFormFields","onSubmit","preventDefault","emailSignInStart","error","console","log","FormInput","type","onChange","required","Button","onClick","googleSignInStart","confirmPassword","signUpStart","code","AuthErrorCodes","alert","StyledAuthentication","SignIn","SignUp","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}